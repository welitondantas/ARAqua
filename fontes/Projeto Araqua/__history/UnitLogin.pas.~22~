unit UnitLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Imaging.pngimage,
  Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ComCtrls;

type
  TFormLogin = class(TForm)
    PanelFundoLogin: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Image1: TImage;
    btnLogar: TButton;
    EditLogin: TEdit;
    EditSenha: TEdit;
    Image2: TImage;
    Image3: TImage;
    Button1: TButton;
    Label3: TLabel;
    StatusBar1: TStatusBar;
    CheckBoxLembrar: TCheckBox;
    procedure btnLogarClick(Sender: TObject);
    procedure verificacoes();
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormLogin: TFormLogin;
  tentativas: integer = 0;

implementation

{$R *.dfm}

uses UnitDataModule, UnitUsuario, UnitPrincipal, UnitFuncoes;



procedure TFormLogin.btnLogarClick(Sender: TObject);
begin
  verificacoes;
end;

procedure TFormLogin.Button1Click(Sender: TObject);
begin
  ModalResult := mrCancel;
end;

procedure TFormLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Application.Terminate;
end;

procedure TFormLogin.verificacoes;
var user: TUsuario;
begin
  user := TUsuario.Create;
  user.Login := EditLogin.Text;
  user.Senha := EditSenha.Text;
  if (Length(EditLogin.Text) > 0) and (Length(EditSenha.Text) > 0) then
    begin
      with DataModule1.FDQueryUsuario do
        begin
          Close;
          SQL.Text := 'select * from usuario where login = :login and senha = :senha';
          ParamByName('login').Value := user.Login;
          ParamByName('senha').Value := user.Senha;
          Open;
          Active := True;
        end;

          if ((DataModule1.FDQueryUsuario.FieldByName('login').AsString = user.Login) AND
              (DataModule1.FDQueryUsuario.FieldByName('senha').AsString = user.senha)) then
            begin
              //Application.MessageBox('Logado com sucesso!','Sucesso!');
              //FormPrincipal := TFormPrincipal.Create(self);
              //FormPrincipal.Show;
              //FormPrincipal.idusuario :=  DataModule1.FDQueryUsuario.FieldByName('id').AsInteger;
              //FormLogin.Hide;
                    StatusBar1.Panels[0].Text := '';
                    FormPrincipal.usuario := DataModule1.FDQueryUsuario.FieldByName('LOGIN').AsString;
                    FormPrincipal.idTema := DataModule1.FDQueryUsuario.FieldByName('IDTEMAS').AsString;
                    FormPrincipal.idUsuario := DataModule1.FDQueryUsuario.FieldByName('ID').AsInteger;
                    FormPrincipal.nomeUsuario := DataModule1.FDQueryUsuario.FieldByName('NOME').AsString;
                    FormPrincipal.Acesso := DataModule1.FDQueryUsuario.FieldByName('ACESSO').AsString;
                    FormPrincipal.StatusBar1.Panels[0].Text :=  ' Bem Vindo '+ FormataNome(PrimeiroNome(FormPrincipal.nomeUsuario))+' !';
                    FormPrincipal.logado := True;
                    ModalResult := mrOK;
            end
          else
            begin
              //Application.MessageBox('Login ou senha incorretos!','Erro');
                    EditLogin.SetFocus;
                    tentativas := tentativas+1;
                    if (DataModule1.FDQueryUsuario.FieldByName('IDSTATUS').AsString <> '1') then
                    begin
                      StatusBar1.Panels[0].Text := ' Usuário bloqueado ou inativo. Tentativas restantes '+InttoStr((4-tentativas));
                    end
                    else
                    begin
                      StatusBar1.Panels[0].Text := ' Usuário ou Senha incorretos. Tentativas restantes '+InttoStr((4-tentativas));
                    end;

            if tentativas > 3 then
              begin
                ShowMessage('Excedeu o número de tentativas, o programa será encerrado!');
                ModalResult := mrCancel; //Application.Terminate;
              end;

            end;
    end
    else
      begin
        Application.MessageBox('Há campos em branco!','Preencha os campos');
      end;

end;

end.
